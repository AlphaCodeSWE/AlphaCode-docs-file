name: Build Typst Documentation

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'documents/**/*.pdf'
  workflow_dispatch:

jobs:
  build_and_sign:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # (Opzionale) Pull rebase se vuoi allinearti a eventuali commit
      - name: Pull latest changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git pull --rebase origin main

      # 1) Install Typst
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Typst CLI
        run: |
          cargo install --locked typst-cli
          typst --version

      # 2) Compila .typ in PDF (se serve)
      - name: Compile Typst files
        run: |
          find sources -type f -name "*.typ" | while read -r file; do
            relpath=$(echo "$file" | sed 's|^sources/||; s|\.typ$|.pdf|')
            output="documents/$relpath"
            mkdir -p "$(dirname "$output")"
            if [ -f "${output%.pdf}_signed.pdf" ]; then
              echo "Skipping $file, PDF giÃ  firmato"
              continue
            fi
            echo "Compiling $file -> $output"
            typst compile --root . "$file" "$output"
          done

      # 3) Firma PDF
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install sign dependencies
        run: |
          echo '{ "name": "node-signpdf-workflow", "version": "1.0.0" }' > package.json
          npm install jsignpdf node-forge pdf-lib node-signpdf

      - name: Create certificate.p12 from secret
        run: echo "${{ secrets.SIGN_CERT }}" | base64 -d > certificate.p12

      - name: Run sign.js script
        env:
          SIGN_CERT_PASSWORD: ${{ secrets.SIGN_CERT_PASSWORD }}
        run: node sign.js

      - name: Verify signed PDFs exist
        run: |
          SIGNED_FILES=$(find documents -type f -name "*_signed.pdf")
          if [ -z "$SIGNED_FILES" ]; then
            echo "ERROR: Nessun PDF firmato trovato!"
            exit 1
          else
            echo "DEBUG: PDF firmati trovati:"
            echo "$SIGNED_FILES"
          fi

      # 4) Genera sign_report.yml
      - name: Generate sign report
        run: |
          echo "signed_files:" > sign_report.yml
          SIGNED_FILES=$(find documents -type f -name "*_signed.pdf")
          for pdf in $SIGNED_FILES; do
            echo "- $pdf" >> sign_report.yml
          done
          echo "Creato sign_report.yml:"
          cat sign_report.yml

      # 5) Carica sign_report.yml come artifact (niente commit)
      - name: Upload sign report artifact
        uses: actions/upload-artifact@v4
        with:
          name: sign-report
          path: sign_report.yml
