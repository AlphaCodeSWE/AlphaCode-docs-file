name: Build and Sign Typst Documentation

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'documents/**/*.pdf'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Pull latest changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git pull --rebase origin main

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install Typst CLI
        run: |
          cargo install --locked typst-cli
          typst --version

      - name: Compile all Typst files to PDF
        run: |
          find sources -type f -name "*.typ" | while read -r file; do
            output="documents/$(echo "$file" | sed 's|^sources/||; s|\.typ$|.pdf|')"
            mkdir -p "$(dirname "$output")"
            typst compile "$file" "$output"
          done

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      # STEP DI DEBUG: Scarica jSignPdf con output verboso
      - name: Download jSignPdf
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip
          wget https://sourceforge.net/projects/jsignpdf/files/jsignpdf/2.2.0/jsignpdf-2.2.0.zip/download -O jsignpdf-2.2.0.zip
          echo "Verifica dimensione file scaricato:"
          ls -lh jsignpdf-2.2.0.zip || exit 1
          echo "Contenuto ZIP (lista file):"
          unzip -l jsignpdf-2.2.0.zip || exit 1

          # Ora estraiamo il jar con dipendenze
          unzip -j jsignpdf-2.2.0.zip "jsignpdf-2.2.0/jsignpdf-2.2.0-jar-with-dependencies.jar" -d .
          mv jsignpdf-2.2.0-jar-with-dependencies.jar jsignpdf.jar

      - name: Decode and set up signing certificate
        run: |
          echo "${{ secrets.SIGN_CERT }}" | base64 -d > cert.p12

      - name: Digitally sign new PDFs
        env:
          SIGN_CERT_PASSWORD: ${{ secrets.SIGN_CERT_PASSWORD }}
        run: |
          find documents -type f -name "*.pdf" | while read -r pdf; do
            filename=$(basename "$pdf")
            dir=$(dirname "$pdf")

            if [[ "$filename" == *_signed.pdf ]]; then
              echo "Skipping already signed file: $filename"
            else
              base="${filename%.pdf}"
              newfile="${base}_signed.pdf"
              echo "Signing $filename -> $newfile"

              java -jar jsignpdf.jar \
                -storetype pkcs12 \
                -keystore cert.p12 \
                -storepass "$SIGN_CERT_PASSWORD" \
                -tsaUrl http://timestamp.digicert.com \
                "$pdf" "$pdf.signed"

              if [ -f "$pdf.signed" ]; then
                mv "$pdf.signed" "$dir/$newfile"
                rm "$pdf"
              else
                echo "Error signing $pdf"
                exit 1
              fi
            fi
          done

      - name: Commit and push signed PDFs
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add documents/
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          git commit -m "Update PDFs with digital signature"
          git push origin HEAD:main
