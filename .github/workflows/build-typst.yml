name: Build and Sign Typst Documentation

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'documents/**/*.pdf'

permissions:
  contents: write

jobs:
  build-and-sign:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Pull latest changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git pull --rebase origin main

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install Typst CLI
        run: |
          cargo install --locked typst-cli
          typst --version

      - name: Compile all Typst files to PDF
        run: |
          find sources -type f -name "*.typ" | while read -r file; do
            output="documents/$(echo "$file" | sed 's|^sources/||; s|\.typ$|.pdf|')"
            mkdir -p "$(dirname "$output")"
            typst compile "$file" "$output"
          done

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Download jSignPdf 2.3.0 (completo)
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip wget
          wget -q "https://sourceforge.net/projects/jsignpdf/files/stable/JSignPdf-2.3.0/jsignpdf-2.3.0.zip/download" -O jsignpdf-2.3.0.zip
          unzip jsignpdf-2.3.0.zip -d jsignpdf-2.3.0
          ls -R jsignpdf-2.3.0

      - name: Download missing libraries (if needed)
        run: |
          # Controlla se la cartella lib esiste già
          if [ ! -d "jsignpdf-2.3.0/lib" ]; then
            echo "Cartella lib non trovata. Creazione e download delle librerie mancanti..."
            mkdir jsignpdf-2.3.0/lib
            # Scarica BouncyCastle Provider
            wget -q "https://repo1.maven.org/maven2/org/bouncycastle/bcprov-jdk15on/1.70/bcprov-jdk15on-1.70.jar" -O jsignpdf-2.3.0/lib/bcprov-jdk15on.jar
            # Scarica BouncyCastle PKIX
            wget -q "https://repo1.maven.org/maven2/org/bouncycastle/bcpkix-jdk15on/1.70/bcpkix-jdk15on-1.70.jar" -O jsignpdf-2.3.0/lib/bcpkix-jdk15on.jar
            # Scarica OpenPDF (se necessario)
            wget -q "https://repo1.maven.org/maven2/com/github/librepdf/openpdf/1.3.30/openpdf-1.3.30.jar" -O jsignpdf-2.3.0/lib/openpdf.jar
            # Aggiungi qui altri wget se ti servono ulteriori librerie
            ls -R jsignpdf-2.3.0/lib
          else
            echo "Cartella lib già presente."
          fi

      - name: Decode and set up signing certificate
        run: |
          echo "${{ secrets.SIGN_CERT }}" | base64 -d > cert.p12

      - name: Digitally sign and remove unsigned PDFs
        env:
          SIGN_CERT_PASSWORD: ${{ secrets.SIGN_CERT_PASSWORD }}
          JAVA_TOOL_OPTIONS: "--add-opens=java.base/sun.security.pkcs12=ALL-UNNAMED"
        run: |
          find documents -type f -name "*.pdf" | while read -r pdf; do
            filename=$(basename "$pdf")
            if [[ "$filename" == *_signed.pdf ]]; then
              continue
            fi
            echo "Firmo $pdf..."
            java -cp "jsignpdf-2.3.0/JSignPdf.jar:jsignpdf-2.3.0/lib/*" net.sf.jsignpdf.JSignPdf \
              -q \
              -kst PKCS12 \
              -ksf cert.p12 \
              -ksp "$SIGN_CERT_PASSWORD" \
              -ts http://timestamp.digicert.com \
              -os _signed \
              "$pdf"
            signed_pdf="${pdf%.pdf}_signed.pdf"
            if [ -f "$signed_pdf" ]; then
              echo "PDF firmato creato: $signed_pdf"
              rm "$pdf"
            else
              echo "ERRORE: Non trovato $signed_pdf, firma fallita?"
              exit 1
            fi
          done

      - name: Commit and push signed PDFs
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add documents/
          if git diff --cached --quiet; then
            echo "Nessuna modifica da commitare"
            exit 0
          fi
          git commit -m "Aggiorna PDF con firma digitale"
          git push origin HEAD:main
